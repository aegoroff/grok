name: CI Build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build_windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Winflexbison
      run: |
        choco install winflexbison
    - name: Create generated dir
      run: |
        mkdir ${{ github.workspace }}/src/grok/generated
    - name: flex and bison
      run: |
        win_flex.exe --fast --wincompat --outfile="src/grok/generated/grok.flex.c" src/grok/grok.lex
        win_bison.exe --output="src/grok/generated/grok.tab.c" -dy src/grok/grok.y
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        vs-version: 16.8
    - name: Build
      uses: lukka/run-cmake@v3
      with:
        cmakeGenerator: VS16Win64
        cmakeListsOrSettingsJson: CMakeListsTxtBasic
        cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
        cmakeBuildType: Release
        buildWithCMakeArgs: "-- -m"
        buildDirectory: ${{ runner.temp }}/build
        buildWithCMake: true
    - name: Unit Tests
      run: ${{ runner.temp }}/build/Release/_tst.exe
    - name: Install
      run: |
        cmake --install ${{ runner.temp }}/build
    - uses: actions/upload-artifact@v2
      with:
        name: grok_windows_x64
        path: ${{ github.workspace }}/bin/*.*

  build_linux:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Create generated dir
        run: |
          mkdir ${{ github.workspace }}/src/grok/generated
      - name: Install Linux packages
        run: sudo apt update && sudo apt install -y --no-install-recommends apache2-dev libapr1-dev libaprutil1-dev
      - name: flex and bison
        run: |
          flex --fast --outfile="src/grok/generated/grok.flex.c" src/grok/grok.lex
          bison --output="src/grok/generated/grok.tab.c" -dy src/grok/grok.y
      - name: Build
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtBasic
          cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
          cmakeBuildType: Release
          buildWithCMakeArgs: "-- -v"
          buildDirectory: ${{ runner.temp }}/build
          buildWithCMake: true
        env:
          APR_HOME: /usr/
      - name: Unit Tests
        run: ${{ runner.temp }}/build/_tst
      - name: Install
        run: |
          cmake --install ${{ runner.temp }}/build
      - uses: actions/upload-artifact@v2
        with:
          name: grok_linux_x64
          path: ${{ github.workspace }}/bin/*

  build_macos:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Create generated dir
        run: |
          mkdir ${{ github.workspace }}/src/grok/generated
      - name: MacPorts
        run: |
          curl -O https://distfiles.macports.org/MacPorts/MacPorts-2.7.1.tar.bz2
          tar xf MacPorts-2.7.1.tar.bz2
          cd MacPorts-2.7.1/
          ./configure
          make
          sudo make install
      - name: Install Macport
        run: |
          port version
          ls -l $(which cmake)
          cmake --version
          sudo port -vs install apr
          sudo port -vs install apr-util
      - name: flex and bison
        run: |
          flex --fast --outfile="src/grok/generated/grok.flex.c" src/grok/grok.lex
          bison --output="src/grok/generated/grok.tab.c" -dy src/grok/grok.y
      - name: Build
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtBasic
          cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
          cmakeBuildType: Release
          buildWithCMakeArgs: "-- -v"
          buildDirectory: ${{ runner.temp }}/build
          buildWithCMake: true
        env:
          APR_HOME: /opt/local/
      - name: Unit Tests
        run: ${{ runner.temp }}/build/_tst
      - name: Install
        run: |
          cmake --install ${{ runner.temp }}/build
      - uses: actions/upload-artifact@v2
        with:
          name: grok_osx_x64
          path: ${{ github.workspace }}/bin/*